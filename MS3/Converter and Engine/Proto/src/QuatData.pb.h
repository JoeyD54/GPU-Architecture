// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: QuatData.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_QuatData_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_QuatData_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_QuatData_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_QuatData_2eproto {
  static const uint32_t offsets[];
};
class QuatData_proto;
struct QuatData_protoDefaultTypeInternal;
extern QuatData_protoDefaultTypeInternal _QuatData_proto_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::QuatData_proto* Arena::CreateMaybeMessage<::QuatData_proto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class QuatData_proto final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:QuatData_proto) */ {
 public:
  inline QuatData_proto() : QuatData_proto(nullptr) {}
  ~QuatData_proto() override;
  explicit PROTOBUF_CONSTEXPR QuatData_proto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QuatData_proto(const QuatData_proto& from);
  QuatData_proto(QuatData_proto&& from) noexcept
    : QuatData_proto() {
    *this = ::std::move(from);
  }

  inline QuatData_proto& operator=(const QuatData_proto& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuatData_proto& operator=(QuatData_proto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const QuatData_proto& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuatData_proto* internal_default_instance() {
    return reinterpret_cast<const QuatData_proto*>(
               &_QuatData_proto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(QuatData_proto& a, QuatData_proto& b) {
    a.Swap(&b);
  }
  inline void Swap(QuatData_proto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuatData_proto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuatData_proto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QuatData_proto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const QuatData_proto& from);
  void MergeFrom(const QuatData_proto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuatData_proto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "QuatData_proto";
  }
  protected:
  explicit QuatData_proto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQxFieldNumber = 1,
    kQyFieldNumber = 2,
    kQzFieldNumber = 3,
    kQwFieldNumber = 4,
  };
  // optional float qx = 1;
  bool has_qx() const;
  private:
  bool _internal_has_qx() const;
  public:
  void clear_qx();
  float qx() const;
  void set_qx(float value);
  private:
  float _internal_qx() const;
  void _internal_set_qx(float value);
  public:

  // optional float qy = 2;
  bool has_qy() const;
  private:
  bool _internal_has_qy() const;
  public:
  void clear_qy();
  float qy() const;
  void set_qy(float value);
  private:
  float _internal_qy() const;
  void _internal_set_qy(float value);
  public:

  // optional float qz = 3;
  bool has_qz() const;
  private:
  bool _internal_has_qz() const;
  public:
  void clear_qz();
  float qz() const;
  void set_qz(float value);
  private:
  float _internal_qz() const;
  void _internal_set_qz(float value);
  public:

  // optional float qw = 4;
  bool has_qw() const;
  private:
  bool _internal_has_qw() const;
  public:
  void clear_qw();
  float qw() const;
  void set_qw(float value);
  private:
  float _internal_qw() const;
  void _internal_set_qw(float value);
  public:

  // @@protoc_insertion_point(class_scope:QuatData_proto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    float qx_;
    float qy_;
    float qz_;
    float qw_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_QuatData_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QuatData_proto

// optional float qx = 1;
inline bool QuatData_proto::_internal_has_qx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool QuatData_proto::has_qx() const {
  return _internal_has_qx();
}
inline void QuatData_proto::clear_qx() {
  _impl_.qx_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float QuatData_proto::_internal_qx() const {
  return _impl_.qx_;
}
inline float QuatData_proto::qx() const {
  // @@protoc_insertion_point(field_get:QuatData_proto.qx)
  return _internal_qx();
}
inline void QuatData_proto::_internal_set_qx(float value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.qx_ = value;
}
inline void QuatData_proto::set_qx(float value) {
  _internal_set_qx(value);
  // @@protoc_insertion_point(field_set:QuatData_proto.qx)
}

// optional float qy = 2;
inline bool QuatData_proto::_internal_has_qy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool QuatData_proto::has_qy() const {
  return _internal_has_qy();
}
inline void QuatData_proto::clear_qy() {
  _impl_.qy_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float QuatData_proto::_internal_qy() const {
  return _impl_.qy_;
}
inline float QuatData_proto::qy() const {
  // @@protoc_insertion_point(field_get:QuatData_proto.qy)
  return _internal_qy();
}
inline void QuatData_proto::_internal_set_qy(float value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.qy_ = value;
}
inline void QuatData_proto::set_qy(float value) {
  _internal_set_qy(value);
  // @@protoc_insertion_point(field_set:QuatData_proto.qy)
}

// optional float qz = 3;
inline bool QuatData_proto::_internal_has_qz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool QuatData_proto::has_qz() const {
  return _internal_has_qz();
}
inline void QuatData_proto::clear_qz() {
  _impl_.qz_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float QuatData_proto::_internal_qz() const {
  return _impl_.qz_;
}
inline float QuatData_proto::qz() const {
  // @@protoc_insertion_point(field_get:QuatData_proto.qz)
  return _internal_qz();
}
inline void QuatData_proto::_internal_set_qz(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.qz_ = value;
}
inline void QuatData_proto::set_qz(float value) {
  _internal_set_qz(value);
  // @@protoc_insertion_point(field_set:QuatData_proto.qz)
}

// optional float qw = 4;
inline bool QuatData_proto::_internal_has_qw() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool QuatData_proto::has_qw() const {
  return _internal_has_qw();
}
inline void QuatData_proto::clear_qw() {
  _impl_.qw_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float QuatData_proto::_internal_qw() const {
  return _impl_.qw_;
}
inline float QuatData_proto::qw() const {
  // @@protoc_insertion_point(field_get:QuatData_proto.qw)
  return _internal_qw();
}
inline void QuatData_proto::_internal_set_qw(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.qw_ = value;
}
inline void QuatData_proto::set_qw(float value) {
  _internal_set_qw(value);
  // @@protoc_insertion_point(field_set:QuatData_proto.qw)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_QuatData_2eproto
